package com.rs.anergine.render.pipeline;

import com.rs.anergine.render.pipelineComponent.PCColor;
import com.rs.anergine.render.pipelineComponent.PCMatrixMVP;

public class PipelineColor extends Pipeline {
    //TODO uniform/attribute generated by components.
    private static final String vertexShaderCode =
            "" +
                    "uniform mat4 uMatrixMVP;" +
                    "attribute vec4 aPosition;" +
                    "void main() {" +
                    "  gl_Position = uMatrixMVP * aPosition;" +
                    "}";

    private static final String fragmentShaderCode =
            "" +
                    "precision mediump float;" +
                    "uniform vec4 uColor;" +
                    "void main() {" +
                    "  gl_FragColor = uColor;" +
                    "}";

    public PipelineColor() {
        super();

        new PCMatrixMVP(this);
        new PCColor(this);

        super.init(vertexShaderCode, fragmentShaderCode);
    }
}
